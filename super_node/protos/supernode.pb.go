// Code generated by protoc-gen-go.
// source: supernode.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	supernode.proto

It has these top-level messages:
	Node
	Nodes
	Empty
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Node struct {
	Ip   string `protobuf:"bytes,1,opt,name=Ip,json=ip" json:"Ip,omitempty"`
	Port string `protobuf:"bytes,2,opt,name=Port,json=port" json:"Port,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto1.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Nodes struct {
	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *Nodes) Reset()                    { *m = Nodes{} }
func (m *Nodes) String() string            { return proto1.CompactTextString(m) }
func (*Nodes) ProtoMessage()               {}
func (*Nodes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Nodes) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto1.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto1.RegisterType((*Node)(nil), "proto.Node")
	proto1.RegisterType((*Nodes)(nil), "proto.Nodes")
	proto1.RegisterType((*Empty)(nil), "proto.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Supernode service

type SupernodeClient interface {
	Join(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Nodes, error)
	PostJoin(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Empty, error)
	GetNode(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Node, error)
}

type supernodeClient struct {
	cc *grpc.ClientConn
}

func NewSupernodeClient(cc *grpc.ClientConn) SupernodeClient {
	return &supernodeClient{cc}
}

func (c *supernodeClient) Join(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Nodes, error) {
	out := new(Nodes)
	err := grpc.Invoke(ctx, "/proto.Supernode/Join", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supernodeClient) PostJoin(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/proto.Supernode/PostJoin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supernodeClient) GetNode(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := grpc.Invoke(ctx, "/proto.Supernode/GetNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Supernode service

type SupernodeServer interface {
	Join(context.Context, *Node) (*Nodes, error)
	PostJoin(context.Context, *Node) (*Empty, error)
	GetNode(context.Context, *Empty) (*Node, error)
}

func RegisterSupernodeServer(s *grpc.Server, srv SupernodeServer) {
	s.RegisterService(&_Supernode_serviceDesc, srv)
}

func _Supernode_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupernodeServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Supernode/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupernodeServer).Join(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

func _Supernode_PostJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupernodeServer).PostJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Supernode/PostJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupernodeServer).PostJoin(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

func _Supernode_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupernodeServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Supernode/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupernodeServer).GetNode(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Supernode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Supernode",
	HandlerType: (*SupernodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _Supernode_Join_Handler,
		},
		{
			MethodName: "PostJoin",
			Handler:    _Supernode_PostJoin_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _Supernode_GetNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("supernode.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x2e, 0x2d, 0x48,
	0x2d, 0xca, 0xcb, 0x4f, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a,
	0x5a, 0x5c, 0x2c, 0x7e, 0x40, 0x41, 0x21, 0x3e, 0x2e, 0x26, 0xcf, 0x02, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0xce, 0x20, 0xa6, 0xcc, 0x02, 0x21, 0x21, 0x2e, 0x96, 0x80, 0xfc, 0xa2, 0x12, 0x09, 0x26,
	0xb0, 0x08, 0x4b, 0x01, 0x90, 0x0d, 0x54, 0xcb, 0x0a, 0x52, 0x5b, 0x2c, 0xa4, 0xc8, 0xc5, 0x0a,
	0x32, 0xa9, 0x18, 0xa8, 0x9e, 0x59, 0x83, 0xdb, 0x88, 0x1b, 0x62, 0xa4, 0x1e, 0x48, 0x32, 0x08,
	0x22, 0xa3, 0xc4, 0xce, 0xc5, 0xea, 0x9a, 0x5b, 0x50, 0x52, 0x69, 0xd4, 0xc8, 0xc8, 0xc5, 0x19,
	0x0c, 0xb3, 0x5b, 0x48, 0x99, 0x8b, 0xc5, 0x2b, 0x3f, 0x33, 0x4f, 0x08, 0x59, 0x8b, 0x14, 0x0f,
	0x12, 0xa7, 0x58, 0x89, 0x41, 0x48, 0x9d, 0x8b, 0x23, 0x20, 0xbf, 0xb8, 0x04, 0xb7, 0x42, 0xb0,
	0xc9, 0x40, 0x85, 0x6a, 0x5c, 0xec, 0xee, 0xa9, 0x25, 0x60, 0xf7, 0xa3, 0x48, 0x49, 0x21, 0xeb,
	0x52, 0x62, 0x48, 0x62, 0x03, 0xf3, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x49, 0xf7, 0x87,
	0xc4, 0x05, 0x01, 0x00, 0x00,
}
