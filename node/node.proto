syntax = "proto3";

package node;

// Service representing the DHT node
service Node {
  // When a client wants to write a file, it contacts the node with the
  // Write method. The node will check whether it needs to store the file
  // locally or not. if it is not the node for the filename, it will forward recursively
  rpc Write(WriteRequest) returns (WriteResponse) {}

  // When a client wants to read a file, it contacts the node with the Read
  // method. The node will check whether it is the node for the filename, if not
  // it will forward the request to the other nodes recursively
  rpc Read(ReadRequest) returns (ReadResponse) {}

  // When a node joins the DHT, it will contact the nodes in the list and let them update
  // the DHT with the new nodes list. When it's finished calling to all nodes, it will let
  // the Supernode know it's done by calling PostJoin()
  rpc UpdateDHT(UpdateDHTRequest) returns (Empty) {}

}

message WriteRequest {
  string filename = 1;
  bytes contents = 2;
}

message WriteResponse {
  string filename = 1;
  int32 n = 2;
}

message ReadRequest {
  string filename = 1;
}

message ReadResponse {
  string filename = 1;
  bytes contents = 2;
}

message UpdateDHTRequest {
  message NodeInfo {
    string ip = 1;
    int32 port = 2;
  }
  repeated NodeInfo nodes = 1;
}

message Empty {}
